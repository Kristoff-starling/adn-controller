start: definition procedure procedure procedure

definition: "internal" "{" declaration* "}"

declaration: identifier ":" type_ 

identifier: CNAME

type_: date_type | "RPC_REQ" | "RPC_RESP" 
       | "Vec" "<" type_ ">" 
       | "Map" "<" type_ "," type_ ">"

date_type: "int" | "float" | "bool" | "string"

procedure: "fn" name parameters body 

name: CNAME

parameters: "(" (parameter | parameter ",") *  ")"

parameter: "rpc_req" | "rpc_resp" | identifier

body: "{" stage* "}"

stage: statement | match

statement: (expr | assign | primitive) ";"

primitive: "send" "(" (expr | err) "," ("APP" | "NET") ")"

assign: identifier ":=" expr

match: "match" "(" expr ")" "{" action* "};"

action: pattern "=>" "{" statement* "}"

pattern: "True" | "False" | "Some" "(" identifier ")" | "None"

expr: identifier | method | func | const | expr op expr | "(" expr ")"

method: expr "." (get | set_ | delete)

func: identifier arguments 

arguments: "(" (expr | expr ",") *  ")"

const: CNAME | quoted_string | NUMBER

get: "get" "(" expr ")"
set_: "set" "(" expr "," expr ")"
delete: "delete" "(" expr ")"

op: "+" | "-" | "*" | "&&" | "||" | "==" | "!=" | "<" | ">" | "<=" | ">="

quoted_string: /'[^']*'/

err: "err" "(" quoted_string ")"

%import common.SIGNED_NUMBER -> NUMBER
%import common.WS
%import common.CPP_COMMENT
%import common.CNAME
%ignore WS
%ignore CPP_COMMENT